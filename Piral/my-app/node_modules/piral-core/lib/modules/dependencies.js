"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultModuleRequester = exports.defaultDependencySelector = exports.globalDependencies = void 0;
const piral_base_1 = require("piral-base");
const tslib_1 = require("tslib");
/**
 * The global dependencies, which represent the dependencies
 * shared from the app shell itself.
 */
exports.globalDependencies = {};
if (process.env.SHARED_DEPENDENCIES) {
    const fillDependencies = require('../../dependencies.codegen');
    if ((0, piral_base_1.isfunc)(fillDependencies)) {
        fillDependencies(exports.globalDependencies);
    }
    else {
        // fall back to the default list if the codegen is invalid / not supported
        (0, tslib_1.__assign)(exports.globalDependencies, {
            react: require('react'),
            'react-dom': require('react-dom'),
            'react-router': require('react-router'),
            'react-router-dom': require('react-router-dom'),
            history: require('history'),
            tslib: require('tslib'),
            'path-to-regexp': require('path-to-regexp'),
            '@libre/atom': require('@libre/atom'),
            '@dbeining/react-atom': require('@dbeining/react-atom'),
        });
    }
}
else {
    // App shell is built with something else than the Piral CLI - just don't fill ...
}
/**
 * The default dependency selector, which just returns the provided
 * dependencies.
 */
function defaultDependencySelector(dependencies) {
    return dependencies;
}
exports.defaultDependencySelector = defaultDependencySelector;
/**
 * The default pilet requester, which just returns an empty array.
 * Use your own code to connect to the feed service.
 *
 * @example
```js
return fetch('https://feed.piral.cloud/api/v1/pilet/sample')
  .then(res => res.json())
  .then(res => res.items);
```
 */
function defaultModuleRequester() {
    return Promise.resolve([]);
}
exports.defaultModuleRequester = defaultModuleRequester;
//# sourceMappingURL=dependencies.js.map